#!/bin/bash
make TestQubit
printf "\nsingle constructor:\n"
java TestQubit 0 0 0
java TestQubit 1 1 0
java TestQubit -1 -1 0
java TestQubit .5 .5 0
java TestQubit -.5 -.5 0
printf "\nMergeSingles:\n"
java TestQubit .5 .5 1 .25 .25 .25 .25
java TestQubit 1 1 1 0 0 0 1
java TestQubit 1 -1 1 0 0 0 -1
java TestQubit .5 1 1 0 .5 0 .5
java TestQubit -.5 1 1 0 .5 0 -.5
java TestQubit 0 0 1 1 0 0 0
java TestQubit 0 1 1 0 1 0 0
printf "\ntoBraKet\n"
java TestQubit 1 0 2
java TestQubit 0 0 2
java TestQubit .5 0 2
java TestQubit -.5 0 2
java TestQubit .1231 0 2
java TestQubit -1 0 2
printf "\nSingleNot\n"
java TestQubit 1 0 3
java TestQubit 0 1 3
java TestQubit .5 .5 3
java TestQubit .3 .7 3
printf "\nhgate\n"
java TestQubit 0 .5 4
java TestQubit 1 -.5 4
java TestQubit .5 0 4
java TestQubit -.5 1 4


#All of the following tests are performed by merging the single Qubits

printf "\nMergeDoubles:\n"
java TestQubit .5 .5 6
java TestQubit 1 1 6
java TestQubit 1 -1 6
java TestQubit .5 1 6
java TestQubit -.5 1 6
java TestQubit 0 0 6
java TestQubit 0 1 6

printf "\nDoubleNot:\n"
java TestQubit 1 1 7 1 0 0 0
java TestQubit .5 .5 7 .25 .25 .25 .25
java TestQubit 1 .5 7 .5 .5 0 0
java TestQubit 1 -1 7 -1 0 0 0
java TestQubit -1 1 7 -1 0 0 0
java TestQubit -1 -1 7 1 0 0 0
java TestQubit 0 0 7 0 0 0 1
java TestQubit 0 -.5 7 0 0 -.5 .5

printf "\nDoubleIndividualNot:\n"
java TestQubit 1 1 8 0 1 0 0 0
java TestQubit 1 1 8 0 0 1 0 1
java TestQubit .5 -.5 8 .25 -.25 .25 -.25 0
java TestQubit .5 -.5 8 -.25 .25 -.25 .25 1
java TestQubit 1 .5 8 0 0 .5 .5 1
java TestQubit 1 .5 8 .5 .5 0 0 0
java TestQubit 1 -1 8 0 0 -1 0 1 
java TestQubit 1 -1 8 0 -1 0 0 0 


printf "\nDoubleIndividualNot:\n"
java TestQubit 1 1 8 0 1 0 0 0
java TestQubit 1 1 8 0 0 1 0 1
java TestQubit .5 -.5 8 .25 -.25 .25 -.25 0
java TestQubit .5 -.5 8 -.25 .25 -.25 .25 1
java TestQubit 1 .5 8 0 0 .5 .5 1
java TestQubit 1 .5 8 .5 .5 0 0 0
java TestQubit 1 -1 8 0 0 -1 0 1 
java TestQubit 1 -1 8 0 -1 0 0 0 


printf "\nDoubleHGate:\n"
java TestQubit 1 1 9 .25 -.25 -.25 .25
java TestQubit 1 -1 9 -.25 .25 .25 -.25
java TestQubit 0 0 9 .25 .25 .25 .25
java TestQubit -1 0 9 -.25 -.25 .25 .25
java TestQubit .5 1 9 .5 -.5 0 0
java TestQubit .5 .5 9 1 0 0 0
java TestQubit -.5 -.5 9 0 0 0 1
java TestQubit .5 -.5 9 0 1 0 0
java TestQubit 1 .5 9 .5 0 -.5 0
java TestQubit 0 -.5 9 0 .5 0 .5

printf "\nDoubleIndividualHGate:\n"
java TestQubit 1 1 10 0 .5 0 -.5 0
java TestQubit 1 1 10  0 0 .5 -.5 1
java TestQubit -.5 1 10 0 0 0 1 0
java TestQubit -.5 1 10 .25 -.25 -.25 .25 1



printf "\nDoubleSwap:\n"
java TestQubit 1 1 11 0 0 0 1
java TestQubit .5 .5 11 .25 .25 .25 .25
java TestQubit 1 .5 11 0 .5 0 .5
java TestQubit 1 -1 11 0 0 0 -1



printf "\nMergeMultiple:\n"
java TestQubit .5 .5 12 .5
java TestQubit 1 0 12 0
java TestQubit 1 1 12 1
java TestQubit -1 1 12 1
java TestQubit -1 -1 12 1
java TestQubit -1 -1 12 -1
java TestQubit .5 0 12 -1
java TestQubit .5 .8 12 .2



printf "\nNotMultiple:\n"
java TestQubit .5 .5 13 .5 .5 .5 .5
java TestQubit 1 0 13 0 0 1 1
java TestQubit 1 1 13 1 0 0 0
java TestQubit -1 -1 13 1 0 0 0
java TestQubit .5 0 13 -1 .5 -1 0
java TestQubit .5 .8 13 .2 .5 .2 .8



printf "\nSingleNotMultiple:\n"
java TestQubit .5 .5 14 .5 .5 .5 .5 1
java TestQubit 1 0 14 0 1 1 0 1
java TestQubit 1 0 14 0 0 0 0 0
java TestQubit 1 0 14 1 1 0 0 2
java TestQubit .5 0 14 1 .5 1 1 1
java TestQubit .5 .8 14 .2 .5 .8 .8 2


printf "\nSingleNotMultiple:\n"
java TestQubit 1 1 15 1 -.5 -.5 -.5 


printf "\nSingleHGate:\n"
java TestQubit 1 1 16 1 1 1 -.5 2
java TestQubit 1 1 16 -.5 1 1 1 2
java TestQubit 1 1 16 .5 1 1 0 2
java TestQubit 1 1 16 1 1 -.5 1 1
java TestQubit 1 1 16 1 -.5 1 1 0
java TestQubit 1 0 16 1 1 .5 1 1
java TestQubit 1 -.5 16 -.5 1 1 -.5 1
java TestQubit 0 0 16 0 .5 0 0 0
java TestQubit 1 1 16 1 1 1 -.5 2


printf "\nSwapGate:\n"
java TestQubit .5 1 17 1 1 .5 1 0 1
java TestQubit 1 .5 17 1 1 1 .5 1 2
java TestQubit .5 1 17 1 1 1 .5 0 2
java TestQubit .5 1 17 1 1 1 1 0 3 1 .5

printf "\nBernVaz:\n"
java TestQubit 0 0 18 0 1 0 1 1 1 3


printf "\nArchimedes:\n"
java TestQubit 0 0 18 0 1 0 1 1 1 3 1 5


printf "\nEntangle:\n"
java TestQubit 0 0 20

